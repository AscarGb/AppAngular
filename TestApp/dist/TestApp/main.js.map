{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/AppService.ts","webpack:///./src/RequestInterceptorService.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/foo/foo.component.css","webpack:///./src/app/foo/foo.component.html","webpack:///./src/app/foo/foo.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/order/order.component.css","webpack:///./src/app/order/order.component.html","webpack:///./src/app/order/order.component.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Cookie } from 'ng2-cookies';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport 'rxjs/add/observable/empty';\r\nimport { AuthData } from 'src/Types';\r\n\r\nexport class UserInfo {\r\n    constructor(\r\n        public id: string,\r\n        public userName: string) { }\r\n}\r\n\r\n@Injectable()\r\nexport class AppService {\r\n    serverAddr: string = 'http://localhost:8082';\r\n\r\n    constructor(\r\n        private _router: Router, private http: HttpClient) { }\r\n\r\n    obtainAccessToken(loginData) {\r\n        let params = new URLSearchParams();\r\n        params.append('username', loginData.username);\r\n        params.append('password', loginData.password);\r\n        params.append('grant_type', 'password');\r\n        params.append('client_id', 'ngAuth');  \r\n\r\n        let headers = new HttpHeaders({ 'Content-type': 'application/x-www-form-urlencoded; charset=utf-8' });\r\n\r\n        this.http.post<AuthData>(this.serverAddr + '/token', params.toString(), { headers: headers })            \r\n            .subscribe(\r\n            data => {\r\n                this.saveToken(data);\r\n                this._router.navigate(['/']);\r\n            });\r\n    }\r\n\r\n    getAuthToken() {\r\n        return Cookie.get('access_token');\r\n    }\r\n\r\n    refreshToken() {\r\n        let params = new URLSearchParams();\r\n        params.append('refresh_token', Cookie.get('refresh_token'));\r\n        params.append('grant_type', 'refresh_token');\r\n        params.append('client_id', 'ngAuth');        \r\n        let headers = new HttpHeaders({ 'Content-type': 'application/x-www-form-urlencoded; charset=utf-8' });\r\n        return this.http.post<AuthData>(this.serverAddr + '/token', params.toString(), { headers: headers });\r\n    }\r\n\r\n    saveToken(token: AuthData) {\r\n        let store_period = 365;\r\n        Cookie.set(\"access_token\", token.access_token, store_period);\r\n        Cookie.set(\"refresh_token\", token.refresh_token, store_period);\r\n    }\r\n\r\n    getResource<T>(resourceUrl: string): Observable<T> {\r\n        return this.http.get<T>(this.serverAddr + \"/\" + resourceUrl);\r\n    }\r\n\r\n    checkCredentials() {\r\n        if (!Cookie.check('access_token')) {\r\n            this._router.navigate(['/login']);\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        Cookie.delete('access_token');\r\n        Cookie.delete('refresh_token');\r\n        this._router.navigate(['/login']);\r\n    }\r\n}\r\n","﻿import { throwError as observableThrowError, Observable, BehaviorSubject } from 'rxjs';\r\n\r\nimport { take, filter, catchError, switchMap, finalize } from 'rxjs/operators';\r\nimport { Injectable, Injector } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpSentEvent, HttpHeaderResponse, HttpProgressEvent, HttpResponse, HttpUserEvent, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { AppService } from 'src/AppService';\r\nimport { AuthData } from 'src/Types';\r\n\r\n\r\n@Injectable()\r\nexport class RequestInterceptorService implements HttpInterceptor {\r\n\r\n    isRefreshingToken: boolean = false;\r\n    tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\r\n\r\n    constructor(private injector: Injector) { }\r\n\r\n    addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\r\n        return req.clone({ setHeaders: { Authorization: 'Bearer ' + token } })\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpSentEvent | HttpHeaderResponse | HttpProgressEvent | HttpResponse<any> | HttpUserEvent<any>> {\r\n        const appService = this.injector.get(AppService);\r\n\r\n\r\n        return next.handle(this.addToken(req, appService.getAuthToken())).pipe(\r\n            catchError(error => {\r\n                if (error instanceof HttpErrorResponse) {\r\n                    switch ((<HttpErrorResponse>error).status) {\r\n                        case 400:\r\n                            return this.handle400Error(error);\r\n                        case 401:\r\n                            return this.handle401Error(req, next);\r\n                    }\r\n                } else {\r\n                    return observableThrowError(error);\r\n                }\r\n            }));\r\n    }\r\n\r\n    handle400Error(error) {\r\n        if (error && error.status === 400 && error.error && error.error.error === 'invalid_grant') {\r\n            // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\r\n            return this.logoutUser();\r\n        }\r\n\r\n        return observableThrowError(error);\r\n    }\r\n\r\n    handle401Error(req: HttpRequest<any>, next: HttpHandler) {\r\n        if (!this.isRefreshingToken) {\r\n            this.isRefreshingToken = true;\r\n\r\n            // Reset here so that the following requests wait until the token\r\n            // comes back from the refreshToken call.\r\n            this.tokenSubject.next(null);\r\n\r\n            const appService = this.injector.get(AppService);\r\n\r\n            return appService.refreshToken().pipe(\r\n                switchMap((newToken: AuthData) => {\r\n                    if (newToken.access_token) {\r\n                        this.tokenSubject.next(newToken.access_token);\r\n                        appService.saveToken(newToken);\r\n                        return next.handle(this.addToken(req, newToken.access_token));\r\n                    }\r\n\r\n                    // If we don't get a new token, we are in trouble so logout.                    \r\n                    return this.logoutUser();\r\n                }),\r\n                catchError(error => {\r\n                    // If there is an exception calling 'refreshToken', bad news so logout.\r\n                    return this.logoutUser();\r\n                }),\r\n                finalize(() => {\r\n                    this.isRefreshingToken = false;\r\n                }), );\r\n        } else {\r\n            return this.tokenSubject.pipe(\r\n                filter(token => token != null),\r\n                take(1),\r\n                switchMap(token => {\r\n                    return next.handle(this.addToken(req, token));\r\n                }), );\r\n        }\r\n    }\r\n\r\n    logoutUser() {\r\n        // Route to the login page (implementation up to you)      \r\n        const appService = this.injector.get(AppService);\r\n        appService.logout();\r\n        return observableThrowError(\"\");\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { OAuthModule } from 'angular-oauth2-oidc';\nimport { HomeComponent } from './home/home.component';\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router';\nimport { FooComponent } from './foo/foo.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule } from '@angular/forms';\nimport { AppService } from 'src/AppService';\nimport { OrdersComponent } from './orders/orders.component';\nimport { OrderComponent } from './order/order.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RequestInterceptorService } from 'src/RequestInterceptorService';\r\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        FooComponent,\n        LoginComponent,\n        OrdersComponent,\n        OrderComponent\n    ],\n    imports: [\n        HttpClientModule,\n        CommonModule,\n        FormsModule,\n        BrowserModule,\r\n        HttpModule,\r\n        OAuthModule.forRoot(),\r\n        RouterModule.forRoot([\r\n            { path: '', component: HomeComponent },\r\n            { path: 'login', component: LoginComponent }])\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: RequestInterceptorService, multi: true },\n        AppService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<h4>user info</h4>\\r\\n<label>ID:</label><span>{{foo.id}}</span>\\r\\n<br />\\r\\n<label>Name:</label>  <span>{{foo.userName}}</span>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppService, UserInfo } from 'src/AppService';\r\n\n@Component({\n    selector: 'foo-details',\n    providers: [AppService],\n    templateUrl: './foo.component.html',\n    styleUrls: ['./foo.component.css']\n})\nexport class FooComponent implements OnInit {\n\n    public foo: UserInfo;\n\n    constructor(private _service: AppService) {\n        this.foo = new UserInfo('', '');\n    }\n\n    ngOnInit() {\n        this.getFoo();\n    }\n\n\r\n\r\n    getFoo() {\r\n        this._service.getResource<UserInfo>('/api/Account/UserInfo')\r\n            .subscribe(\r\n            data => this.foo = data,\r\n            error => this.foo.userName = 'Error');\r\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<span>Welcome !!</span>\\r\\n<a (click)=\\\"logout()\\\" href=\\\"#\\\">Logout</a>\\r\\n<foo-details></foo-details>\\r\\n<app-orders></app-orders>\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from 'src/AppService';\r\n\n@Component({\n  selector: 'home-header',\n  providers: [AppService],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(\r\n    private _service: AppService) { }\r\n\r\n  ngOnInit() {\r\n    this._service.checkCredentials();\r\n  }\r\n\r\n  logout() {\r\n    this._service.logout();\r\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>Login</h1>\\r\\n<input type=\\\"text\\\" [(ngModel)]=\\\"loginData.username\\\" />\\r\\n<input type=\\\"password\\\" [(ngModel)]=\\\"loginData.password\\\" />\\r\\n<button (click)=\\\"login()\\\" type=\\\"submit\\\">Login</button>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AppService } from 'src/AppService';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private _service: AppService) { }\n\n  ngOnInit() {\n  }\n\n  public loginData = { username: \"\", password: \"\" };\r\n\r\n  login() {\r\n    this._service.obtainAccessToken(this.loginData);\r\n  }\n}\n","module.exports = \"\"","module.exports = \"<span>\\r\\n    {{order.orderID}}\\r\\n    {{order.customerName}}\\r\\n    {{order.shipperCity}}\\r\\n    {{order.isShipped}}\\r\\n</span>\"","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\r\nimport { IOrder } from 'src/Types';\r\n\n@Component({\n    selector: 'app-order',\n    templateUrl: './order.component.html',\n    styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n    @Input() order: IOrder;\n\n    constructor() { }\n\n    ngOnInit() {       \n    }\n}\n","module.exports = \"\"","module.exports = \"<ul>\\r\\n    <li *ngFor=\\\"let order of orders\\\">\\r\\n        <app-order [order]=\\\"order\\\"></app-order>\\r\\n    </li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { OrderComponent } from 'src/app/order/order.component';\r\nimport { IOrder, Order } from 'src/Types';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { AppService } from 'src/AppService';\r\n\n@Component({\n    selector: 'app-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n\n    orders: IOrder[];\n\n    constructor(private _service: AppService) {\n    }\n\n    ngOnInit() {\n        this.getOrders().subscribe(orders => {\r\n            this.orders = orders;\n        });\n    }\n\n    getOrders(): Observable<IOrder[]> {\r\n        return this._service.getResource<IOrder[]>(\"api/Orders\");\r\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}